version: '3.4'

services:
    db:
        image: mysql:5.7
        container_name: ivelin_mysql
        environment:
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            DOCKER_COMPOSE_YML_LOCATION: ${PWD}
        restart: always
        volumes:
            - ./backend/database/db.sql:/docker-entrypoint-initdb.d/init.sql # prepopulate database
            - db_data:/var/lib/mysql # persist database data inside docker storage

    phpmyadmin:
        container_name: ivelin_phpmyadmin
        depends_on:
            - db
        image: phpmyadmin/phpmyadmin
        restart: always
        ports:
            - "8080:80"
        environment:
            PMA_HOST: db
            DOCKER_COMPOSE_YML_LOCATION: ${PWD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}

    wordpress:
        container_name: ivelin_wordpress
        depends_on:
            - db
        image: wordpress:latest
        ports:
            - "8000:80"
        restart: always
        environment:
            WORDPRESS_DB_HOST: db:3306
            WORDPRESS_DB_USER: ${MYSQL_USER}
            WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
            WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
            DOCKER_COMPOSE_YML_LOCATION: ${PWD}
            WORDPRESS_TABLE_PREFIX: ${WORDPRESS_TABLE_PREFIX}
        volumes:
            - ./backend/wp-content:/var/www/html/wp-content

    nextjs:
        container_name: ivelin_web
        depends_on:
            - wordpress
        environment:
            WP_URL: wordpress
            WP_GRAPHQL: "index.php?graphql"
        ports:
            - "3001:3000"
        build:
            context: ./
            dockerfile: ./docker/web/Dockerfile
        healthcheck:
            test: ["CMD", "curl", "-f", "http://0.0.0.0:3000"]
            interval: 15s
            timeout: 3s
            start_period: 30s
            retries: 10
    nginx:
        build:
            context: ./
            dockerfile: ./docker/nginx/Dockerfile
            args:
                WEB_URL: nextjs
        container_name: ivelin_nginx
        depends_on:
            nextjs:
                condition: service_healthy
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
            - ./ssl/certbot/conf:/etc/nginx/ssl
            - ./ssl/certbot/data:/var/www/certbot
        healthcheck:
            test: ["CMD", "curl", "-f", "http://0.0.0.0:80"]
            interval: 15s
            timeout: 3s
            start_period: 60s
            retries: 5
    certbot:
        image: certbot/certbot:latest
        command: certonly --webroot --webroot-path=/var/www/certbot --email ivelin.iliev@hotmail.com --agree-tos --no-eff-email -d ivelin.me -d www.ivelin.me
        depends_on:
            nginx:
                condition: service_healthy
        volumes:
            - ./ssl/certbot/conf:/etc/letsencrypt
            - ./ssl/certbot/logs:/var/log/letsencrypt
            - ./ssl/certbot/data:/var/www/certbot
volumes:
    db_data: {}